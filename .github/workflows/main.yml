on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  schedule: [cron: "40 1 * * *"]

name: ci

jobs:
  # build/test all supported targets for library and bins (skipping slow and squashfs-tools tests)
  cross-test:
    runs-on: ${{ matrix.job.os }}
    env:
      RUSTFLAGS: "-C target-feature=+crt-static"
      BUILD_CMD: cargo
    strategy:
      fail-fast: false
      matrix:
        job:
          - { target: x86_64-unknown-linux-musl,    os: ubuntu-latest, use-cross: true }
          - { target: aarch64-unknown-linux-musl,   os: ubuntu-latest, use-cross: true }
          - { target: arm-unknown-linux-musleabi,   os: ubuntu-latest, use-cross: true }
          - { target: armv7-unknown-linux-musleabi, os: ubuntu-latest, use-cross: true }
          - { target: aarch64-unknown-linux-musl,   os: ubuntu-latest, use-cross: true }
          - { target: x86_64-apple-darwin,          os: macos-12                       }
        toolchain:
          - stable
            # msrv of backhand-cli
          - 1.74.0
        features:
          # default features
          -

    steps:
      - uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4.1.4
      - name: Populate cache
        uses: ./.github/workflows/cache

      - name: Overwrite build command env variable
        if: matrix.job.use-cross
        shell: bash
        run: |
          echo "BUILD_CMD=cross" >> $GITHUB_ENV
          RUSTFLAGS="-C target-feature=-crt-static" cargo install cross --git https://github.com/cross-rs/cross

      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.toolchain }}
      # build lib and bins with cross
      - run: $BUILD_CMD build ${{ matrix.features }} --target ${{ matrix.job.target }} --release --locked --workspace --features xz-static
      # test with cross, skipping slow test and tests that use more then qemu default memory
      - run: CROSS_CONTAINER_OPTS="--network host" RUST_LOG=info $BUILD_CMD test --workspace --release ${{ matrix.features }} --target ${{ matrix.job.target }} --features xz-static --locked -- --skip slow --skip no_qemu 
  # build/test all supported on native x86_64 arch for library and bins (all tests)
  build-test-native:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        toolchain:
          - stable
            # msrv of backhand-cli
          - 1.74.0
        features:
          - --no-default-features --features xz
          - --no-default-features --features gzip
          - --no-default-features --features gzip,xz
          - --no-default-features --features xz-static
          - --no-default-features --features gzip-zune-inflate
          # default features
          -

    steps:
      - run: sudo apt-get install -y squashfs-tools
      - uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4.1.4
      - uses: dtolnay/rust-toolchain@bb45937a053e097f8591208d8e74c90db1873d07 # master
        with:
          toolchain: ${{ matrix.toolchain }}
      # build bins
      - run: cargo build ${{ matrix.features }} --release --locked --workspace
      # run tests with native unsquashfs on x86_64-unknown-linux-musl (using Cross.toml)
      - run: RUST_LOG=info cargo test --workspace --release ${{ matrix.features }}  --locked --features __test_unsquashfs -- --skip slow

  # fmt and clippy on stable
  fmt-clippy-stable:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4.1.4
      - uses: dtolnay/rust-toolchain@bb45937a053e097f8591208d8e74c90db1873d07 # master
        with:
          toolchain: stable
          components: rustfmt, clippy

      # fmt
      - run: cargo fmt --all -- --check

      # clippy
      - run: cargo clippy -- -D warnings
