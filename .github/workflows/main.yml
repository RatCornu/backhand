on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  schedule: [cron: "40 1 * * *"]

name: ci

jobs:
  # build all supported targets for library and bins
  build-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-musl
          - aarch64-unknown-linux-musl
          - arm-unknown-linux-musleabi
          - mips-unknown-linux-musl
          - mipsel-unknown-linux-musl
        toolchain:
          - stable
            # msrv
          - 1.65.0
        features:
          - --no-default-features --features xz
          - --no-default-features --features gzip
          - --no-default-features --features gzip,xz
          - --no-default-features --features xz-static
          # default features
          -

    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.toolchain }}
          components: rustfmt, clippy
      - uses: Swatinem/rust-cache@v2
      # install cross
      - run: cargo install cargo-quickinstall
      - run: cargo quickinstall cross@0.2.5 --force
      # build with cross
      - run: cross build ${{ matrix.features }} --target ${{ matrix.target }} --locked --lib
      # test with cross
      - run: CROSS_CONTAINER_OPTS="--network host" RUST_LOG=info cross test --release ${{ matrix.features }} --features __fast-test --target ${{ matrix.target }} --locked

  # build all supported on native arch for library and bins
  build-test-native:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        toolchain:
          - stable
            # msrv
          - 1.65.0
        features:
          - --no-default-features --features xz
          - --no-default-features --features gzip
          - --no-default-features --features gzip,xz
          - --no-default-features --features xz-static
          # default features
          -

    steps:
      - run: sudo apt-get install -y squashfs-tools
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.toolchain }}
          components: rustfmt, clippy
      - uses: Swatinem/rust-cache@v2
      # install cross
      # test with cross
      - run: RUST_LOG=info cargo test --release ${{ matrix.features }} --locked


  # benchmark
  benchmark:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        toolchain:
          - stable

    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.toolchain }}
      - uses: Swatinem/rust-cache@v2
      - run: cargo bench

  # fmt and clippy on nightly builds
  fmt-clippy-nightly:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly
          components: rustfmt, clippy
      - uses: Swatinem/rust-cache@v2

      # fmt
      - run: cargo fmt --all -- --check

      # clippy
      - run: cargo clippy -- -D warnings
